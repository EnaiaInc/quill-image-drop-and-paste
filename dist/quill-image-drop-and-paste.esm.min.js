var e={urlIsImage(e,t=3e3){return this.validURL(e)?/\.(jpeg|jpg|gif|png|webp|tiff|bmp)$/.test(e)?Promise.resolve(!0):new Promise(((r,i)=>{let a;const n=new Image;n.onerror=n.onabort=()=>{clearTimeout(a),i(!1)},n.onload=()=>{clearTimeout(a),r(!0)},a=setTimeout((()=>{n.src="//!/an/invalid.jpg",i(!1)}),t),n.src=e})):Promise.reject(!1)},validURL(e){try{return Boolean(new URL(e))}catch(e){return!1}},isHtmlText(e){let t=!1;return Array.prototype.forEach.call(e,(e=>{e.type.match(/^text\/html$/i)&&(t=!0)})),t},resolveDataUrl(e){let t="";return"string"==typeof e?t=e:e instanceof ArrayBuffer&&(t=this.arrayBufferToBase64Url(e)),t},binaryStringToArrayBuffer(e){const t=e.length,r=new ArrayBuffer(t),i=new Uint8Array(r);let a=-1;for(;++a<t;)i[a]=e.charCodeAt(a);return r},arrayBufferToBase64Url:e=>btoa(String.fromCharCode(...new Uint8Array(e)))};class t{constructor(e,t){this.dataUrl=e,this.type=t}minify(r){return new Promise(((i,a)=>{const n=r.maxWidth||800,l=r.maxHeight||800,o=r.quality||.8;if(!this.dataUrl)return a({message:"[error] QuillImageDropAndPaste: Fail to minify the image, dataUrl should not be empty."});const s=new Image;s.onload=()=>{const e=s.width,r=s.height;e>r?e>n&&(s.height=r*n/e,s.width=n):r>l&&(s.width=e*l/r,s.height=l);const h=document.createElement("canvas");h.width=s.width,h.height=s.height;const d=h.getContext("2d");if(d){d.drawImage(s,0,0,s.width,s.height);const e=this.type||"image/png",r=h.toDataURL(e,o);i(new t(r,e))}else a({message:"[error] QuillImageDropAndPaste: Fail to minify the image, create canvas context failure."})},s.src=e.resolveDataUrl(this.dataUrl)}))}toFile(e){return window.File?new File([this.toBlob()],e,{type:this.type}):(console.error("[error] QuillImageDropAndPaste: Your browser didnot support File API."),null)}toBlob(){const t=e.resolveDataUrl(this.dataUrl).replace(/^[^,]+,/,""),r=e.binaryStringToArrayBuffer(atob(t));return this.createBlob([r],{type:this.type})}createBlob(e,t){t||(t={}),"string"==typeof t&&(t={type:t});try{return new Blob(e,t)}catch(r){if("TypeError"!==r.name)throw r;const i=new("BlobBuilder"in window?window.BlobBuilder:"MSBlobBuilder"in window?window.MSBlobBuilder:"MozBlobBuilder"in window?window.MozBlobBuilder:window.WebKitBlobBuilder);for(let t=0;t<e.length;t++)i.append(e[t]);return i.getBlob(t.type)}}}class r{constructor(e,t){this.quill=e,this.option=t,this.handleDrop=this.handleDrop.bind(this),this.handlePaste=this.handlePaste.bind(this),this.insert=this.insert.bind(this),this.quill.root.addEventListener("drop",this.handleDrop,!1),this.quill.root.addEventListener("paste",this.handlePaste,!1)}handleDrop(r){if(r.preventDefault(),r.dataTransfer&&r.dataTransfer.files&&r.dataTransfer.files.length){if(document.caretRangeFromPoint){const e=document.getSelection(),t=document.caretRangeFromPoint(r.clientX,r.clientY);e&&t&&e.setBaseAndExtent(t.startContainer,t.startOffset,t.startContainer,t.startOffset)}this.readFiles(r.dataTransfer.files,((r,i)=>{i=i||"image/png","function"==typeof this.option.handler?this.option.handler.call(this,r,i,new t(r,i)):this.insert.call(this,e.resolveDataUrl(r),i)}),r)}}handlePaste(r){if(r.clipboardData&&r.clipboardData.items&&r.clipboardData.items.length){if(e.isHtmlText(r.clipboardData.items))return;this.readFiles(r.clipboardData.items,((r,i)=>{i=i||"image/png","function"==typeof this.option.handler?this.option.handler.call(this,r,i,new t(r,i)):this.insert(e.resolveDataUrl(r),"image")}),r)}}readFiles(e,t,r){Array.prototype.forEach.call(e,(e=>{e instanceof DataTransferItem?this.handleDataTransfer(e,t,r):e instanceof File&&this.handleDroppedFile(e,t,r)}))}handleDataTransfer(t,r,i){const a=this,n=t.type;if(n.match(/^image\/(gif|jpe?g|a?png|svg|webp|bmp)/i)){i.preventDefault();const e=new FileReader;e.onload=e=>{e.target&&e.target.result&&r(e.target.result,n)};const a=t.getAsFile?t.getAsFile():t;a instanceof Blob&&e.readAsDataURL(a)}else n.match(/^text\/plain$/i)&&(i.preventDefault(),t.getAsString((t=>{e.urlIsImage(t).then((()=>{a.insert(t,"image")})).catch((()=>{a.insert(t,"text")}))})))}handleDroppedFile(e,t,r){const i=e.type;if(i.match(/^image\/(gif|jpe?g|a?png|svg|webp|bmp)/i)){r.preventDefault();const a=new FileReader;a.onload=e=>{e.target&&e.target.result&&t(e.target.result,i)},a.readAsDataURL(e)}}insert(e,t){let r,i=(this.quill.getSelection(!0)||{}).index;(void 0===i||i<0)&&(i=this.quill.getLength()),"image"===t?(r=i+1,this.quill.insertEmbed(i,t,e,"user")):"text"===t&&(r=i+e.length,this.quill.insertText(i,e,"user")),setTimeout((()=>{this.quill.setSelection(r)}))}}r.ImageData=t,window.QuillImageDropAndPaste=r,"Quill"in window&&window.Quill.register("modules/imageDropAndPaste",r);export{t as ImageData,r as default};
//# sourceMappingURL=quill-image-drop-and-paste.esm.min.js.map
